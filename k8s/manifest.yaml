apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-ues-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      name: demo-ues-deployment
  replicas: 1
  template:
    metadata:
      labels:
        name: demo-ues-deployment
    spec:
      containers:
      - name: demo-ues-container
        image: gcr.io/serious-curve-364819/demo-ues:latest
        ports:
        - containerPort: 3333
        resources:
          requests:
            memory: "64Mi"
            cpu: "150m"
          limits:
            memory: "128Mi"
            cpu: "250m"
#        livenessProbe:
#          httpGet:
#            path: /health
#            port: 8080
#          initialDelaySeconds: 60
#          periodSeconds: 30
#          timeoutSeconds: 10
#        readinessProbe:
#          httpGet:
#            path: /health
#            port: 8080
#          initialDelaySeconds: 60
#          periodSeconds: 30
#          timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: demo-ues-service
  namespace: default
  labels:
    name: demo-ues-deployment
spec:
  type: NodePort
  selector:
    name: demo-ues-deployment
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3333
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  namespace: default
  annotations:
#    kubernetes.io/ingress.global-static-ip-name: ingress-controller-ip
#    networking.gke.io/managed-certificates: managed-cert
    kubernetes.io/ingress.class: "gce"
spec:
  defaultBackend:
    service:
      name: demo-ues-service
      port:
        number: 80
  rules:
    - http:
        paths:
        - path: /
          pathType: ImplementationSpecific
          backend:
            service:
              name: demo-ues-service
              port:
                number: 80